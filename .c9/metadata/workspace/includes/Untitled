{"changed":true,"filter":false,"title":"Untitled","tooltip":"/includes/Untitled","value":"<?php\n/*****************************\n\tFile: includes/functions.php\n\tWritten by: Frost of Slunked.com\n\tTutorial: User Registration and Login System\n******************************/\n\n/***********\n\tbool createAccount (string $pUsername, string $pPassword)\n\t\tAttempt to create an account for the passed in \n\t\tusername and password.\n************/\nfunction createAccount($pUsername, $pPassword) {\n\t// First check we have data passed in.\n\tif (!empty($pUsername) && !empty($pPassword)) {\n\t\t$uLen = strlen($pUsername);\n\t\t$pLen = strlen($pPassword);\n\t\t\n\t\t// escape the $pUsername to avoid SQL Injections\n\t\t$eUsername = mysql_real_escape_string($pUsername);\n\t\t$sql = \"SELECT username FROM users WHERE username = '\" . $eUsername . \"' LIMIT 1\";\n\n\t\t// Note the use of trigger_error instead of or die.\n\t\t$query = mysql_query($sql) or trigger_error(\"Query Failed: \" . mysql_error());\n\n\t\t// Error checks (Should be explained with the error)\n\t\tif ($uLen <= 4 || $uLen >= 11) {\n\t\t\t$_SESSION['error'] = \"Username must be between 4 and 11 characters.\";\n\t\t}elseif ($pLen < 6) {\n\t\t\t$_SESSION['error'] = \"Password must be longer then 6 characters.\";\n\t\t}elseif (mysql_num_rows($query) == 1) {\n\t\t\t$_SESSION['error'] = \"Username already exists.\";\n\t\t}else {\n\t\t\t// All errors passed lets\n\t\t\t// Create our insert SQL by hashing the password and using the escaped Username.\n\t\t\t$sql = \"INSERT INTO users (`username`, `password`) VALUES ('\" . $eUsername . \"', '\" . hashPassword($pPassword, SALT1, SALT2) . \"');\";\n\t\t\t\n\t\t\t$query = mysql_query($sql) or trigger_error(\"Query Failed: \" . mysql_error());\n\t\t\t\n\t\t\tif ($query) {\n\t\t\t\treturn true;\n\t\t\t}\t\n\t\t}\n\t}\n\t\n\treturn false;\n}\n\n/***********\n\tstring hashPassword (string $pPassword, string $pSalt1, string $pSalt2)\n\t\tThis will create a SHA1 hash of the password\n\t\tusing 2 salts that the user specifies.\n************/\nfunction hashPassword($pPassword, $pSalt1=\"2345#$%@3e\", $pSalt2=\"taesa%#@2%^#\") {\n\treturn sha1(md5($pSalt2 . $pPassword . $pSalt1));\n}\n\n/***********\n\tbool loggedIn\n\t\tverifies that session data is in tack\n\t\tand the user is valid for this session.\n************/\nfunction loggedIn() {\n\t// check both loggedin and username to verify user.\n\tif (isset($_SESSION['loggedin']) && isset($_SESSION['username'])) {\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\n\n/***********\n\tbool logoutUser \n\t\tLog out a user by unsetting the session variable.\n************/\nfunction logoutUser() {\n\t// using unset will remove the variable\n\t// and thus logging off the user.\n\tunset($_SESSION['username']);\n\tunset($_SESSION['loggedin']);\n\t\n\treturn true;\n}\n\n/***********\n\tbool validateUser\n\t\tAttempt to verify that a username / password\n\t\tcombination are valid. If they are it will set\n\t\tcookies and session data then return true. \n\t\tIf they are not valid it simply returns false. \n************/\nfunction validateUser($pUsername, $pPassword) {\n\t// See if the username and password are valid.\n\t$sql = \"SELECT username FROM users \n\t\tWHERE username = '\" . mysql_real_escape_string($pUsername) . \"' AND password = '\" . hashPassword($pPassword, SALT1, SALT2) . \"' LIMIT 1\";\n\t$query = mysql_query($sql) or trigger_error(\"Query Failed: \" . mysql_error());\n\t\n\t// If one row was returned, the user was logged in!\n\tif (mysql_num_rows($query) == 1) {\n\t\t$row = mysql_fetch_assoc($query);\n\t\t$_SESSION['username'] = $row['username'];\n\t\t$_SESSION['loggedin'] = true;\n\t\t\t\n\t\treturn true;\n\t}\n\t\n\t\n\treturn false;\n}\n?>","undoManager":{"mark":-1,"position":0,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":5}},"text":"<?php"},{"action":"insertText","range":{"start":{"row":0,"column":5},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":109,"column":0}},"lines":["/*****************************","\tFile: includes/functions.php","\tWritten by: Frost of Slunked.com","\tTutorial: User Registration and Login System","******************************/","","/***********","\tbool createAccount (string $pUsername, string $pPassword)","\t\tAttempt to create an account for the passed in ","\t\tusername and password.","************/","function createAccount($pUsername, $pPassword) {","\t// First check we have data passed in.","\tif (!empty($pUsername) && !empty($pPassword)) {","\t\t$uLen = strlen($pUsername);","\t\t$pLen = strlen($pPassword);","\t\t","\t\t// escape the $pUsername to avoid SQL Injections","\t\t$eUsername = mysql_real_escape_string($pUsername);","\t\t$sql = \"SELECT username FROM users WHERE username = '\" . $eUsername . \"' LIMIT 1\";","","\t\t// Note the use of trigger_error instead of or die.","\t\t$query = mysql_query($sql) or trigger_error(\"Query Failed: \" . mysql_error());","","\t\t// Error checks (Should be explained with the error)","\t\tif ($uLen <= 4 || $uLen >= 11) {","\t\t\t$_SESSION['error'] = \"Username must be between 4 and 11 characters.\";","\t\t}elseif ($pLen < 6) {","\t\t\t$_SESSION['error'] = \"Password must be longer then 6 characters.\";","\t\t}elseif (mysql_num_rows($query) == 1) {","\t\t\t$_SESSION['error'] = \"Username already exists.\";","\t\t}else {","\t\t\t// All errors passed lets","\t\t\t// Create our insert SQL by hashing the password and using the escaped Username.","\t\t\t$sql = \"INSERT INTO users (`username`, `password`) VALUES ('\" . $eUsername . \"', '\" . hashPassword($pPassword, SALT1, SALT2) . \"');\";","\t\t\t","\t\t\t$query = mysql_query($sql) or trigger_error(\"Query Failed: \" . mysql_error());","\t\t\t","\t\t\tif ($query) {","\t\t\t\treturn true;","\t\t\t}\t","\t\t}","\t}","\t","\treturn false;","}","","/***********","\tstring hashPassword (string $pPassword, string $pSalt1, string $pSalt2)","\t\tThis will create a SHA1 hash of the password","\t\tusing 2 salts that the user specifies.","************/","function hashPassword($pPassword, $pSalt1=\"2345#$%@3e\", $pSalt2=\"taesa%#@2%^#\") {","\treturn sha1(md5($pSalt2 . $pPassword . $pSalt1));","}","","/***********","\tbool loggedIn","\t\tverifies that session data is in tack","\t\tand the user is valid for this session.","************/","function loggedIn() {","\t// check both loggedin and username to verify user.","\tif (isset($_SESSION['loggedin']) && isset($_SESSION['username'])) {","\t\treturn true;","\t}","\t","\treturn false;","}","","/***********","\tbool logoutUser ","\t\tLog out a user by unsetting the session variable.","************/","function logoutUser() {","\t// using unset will remove the variable","\t// and thus logging off the user.","\tunset($_SESSION['username']);","\tunset($_SESSION['loggedin']);","\t","\treturn true;","}","","/***********","\tbool validateUser","\t\tAttempt to verify that a username / password","\t\tcombination are valid. If they are it will set","\t\tcookies and session data then return true. ","\t\tIf they are not valid it simply returns false. ","************/","function validateUser($pUsername, $pPassword) {","\t// See if the username and password are valid.","\t$sql = \"SELECT username FROM users ","\t\tWHERE username = '\" . mysql_real_escape_string($pUsername) . \"' AND password = '\" . hashPassword($pPassword, SALT1, SALT2) . \"' LIMIT 1\";","\t$query = mysql_query($sql) or trigger_error(\"Query Failed: \" . mysql_error());","\t","\t// If one row was returned, the user was logged in!","\tif (mysql_num_rows($query) == 1) {","\t\t$row = mysql_fetch_assoc($query);","\t\t$_SESSION['username'] = $row['username'];","\t\t$_SESSION['loggedin'] = true;","\t\t\t","\t\treturn true;","\t}","\t","\t","\treturn false;","}"]},{"action":"insertText","range":{"start":{"row":109,"column":0},"end":{"row":109,"column":2}},"text":"?>"}]}]]},"ace":{"folds":[],"scrolltop":1088,"scrollleft":0,"selection":{"start":{"row":109,"column":2},"end":{"row":109,"column":2},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":76,"state":"start","mode":"ace/mode/text"}},"timestamp":1413522215003}